name: CI/CD

on:
  push:
  pull_request:
    branches:
      - dev
      - release/*

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install packages
        run: |
          date
          pip install -r dependencies/pip/requirements.txt
          python setup.py check -m -s
      - name: Run tests
        run: |
          date
          tools/test.sh
          date
  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install packages
        run: |
          date
          pip install -r dependencies/pip/requirements.txt
          pip install setuptools wheel twine
      - name: Make release
        run: |
          date
          python tools/releasing/release.py
          echo "Release: $(python "src/k3x/version.py")"
          python setup.py check -m -s
          python setup.py sdist bdist_wheel
          git tag $(python "src/k3x/version.py")
      - name: Upload release
        env:
          TWINE_USERNAME: __token__
          TWINE_TEST_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_PROD_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          date
          echo "Uploading: $(python "src/k3x/version.py")"
          echo git push origin $(python "src/k3x/version.py")
          export TWINE_PASSWORD="${TWINE_TEST_PASSWORD}"
          echo twine upload --repository testpypi dist/*
          if [[ "${GITHUB_REF}" = refs/heads/release/* && "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "This is a release"
            export TWINE_PASSWORD="${TWINE_PROD_PASSWORD}"
            echo twine upload --repository pypi dist/*
          fi
          date
